openapi: 3.0.3
info:
  title: 'News Aggregator API Documentation'
  description: 'A comprehensive news aggregation API that collects and serves news articles from multiple sources including NewsAPI, NewsData.io, and The New York Times.'
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
tags:
  -
    name: Articles
    description: "\nAPIs for managing and retrieving news articles"
  -
    name: Authentication
    description: "\nAPIs for user authentication and account management"
  -
    name: Categories
    description: "\nAPIs for retrieving article categories"
  -
    name: Endpoints
    description: ''
  -
    name: Sources
    description: "\nAPIs for retrieving news sources"
  -
    name: 'User Preferences'
    description: "\nAPIs for managing user preferences and personalized feeds"
paths:
  /api/articles:
    get:
      summary: 'List articles'
      operationId: listArticles
      description: "Retrieve a paginated list of articles with optional filtering.\nIf no articles exist, automatically scrapes news based on user preferences or defaults."
      parameters:
        -
          in: query
          name: page
          description: 'Page number for pagination.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page number for pagination.'
            example: 1
            nullable: false
        -
          in: query
          name: per_page
          description: 'Number of articles per page (max 50).'
          example: 10
          required: false
          schema:
            type: integer
            description: 'Number of articles per page (max 50).'
            example: 10
            nullable: false
        -
          in: query
          name: category
          description: 'Filter by category slug.'
          example: technology
          required: false
          schema:
            type: string
            description: 'Filter by category slug.'
            example: technology
            nullable: false
        -
          in: query
          name: source
          description: 'Filter by source slug.'
          example: newsapi
          required: false
          schema:
            type: string
            description: 'Filter by source slug.'
            example: newsapi
            nullable: false
        -
          in: query
          name: from_date
          description: 'Filter articles from this date (Y-m-d format).'
          example: '2024-01-01'
          required: false
          schema:
            type: string
            description: 'Filter articles from this date (Y-m-d format).'
            example: '2024-01-01'
            nullable: false
        -
          in: query
          name: to_date
          description: 'Filter articles to this date (Y-m-d format).'
          example: '2024-01-31'
          required: false
          schema:
            type: string
            description: 'Filter articles to this date (Y-m-d format).'
            example: '2024-01-31'
            nullable: false
        -
          in: query
          name: keyword
          description: 'Search articles by keyword in title or description.'
          example: AI
          required: false
          schema:
            type: string
            description: 'Search articles by keyword in title or description.'
            example: AI
            nullable: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  data:
                    current_page: 1
                    data:
                      -
                        id: 1
                        title: 'Breaking News: AI Revolution'
                        description: 'Latest developments in artificial intelligence...'
                        content: 'Full article content here...'
                        url: 'https://example.com/article/1'
                        url_to_image: 'https://example.com/image.jpg'
                        published_at: '2024-01-15T10:30:00.000000Z'
                        source:
                          id: 1
                          name: NewsAPI
                          slug: newsapi
                        category:
                          id: 1
                          name: Technology
                          slug: technology
                        created_at: '2024-01-15T10:30:00.000000Z'
                        updated_at: '2024-01-15T10:30:00.000000Z'
                    first_page_url: 'http://localhost:8000/api/articles?page=1'
                    from: 1
                    last_page: 10
                    last_page_url: 'http://localhost:8000/api/articles?page=10'
                    links: []
                    next_page_url: 'http://localhost:8000/api/articles?page=2'
                    prev_page_url: null
                    to: 10
                    total: 100
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      data:
                        type: array
                        example:
                          -
                            id: 1
                            title: 'Breaking News: AI Revolution'
                            description: 'Latest developments in artificial intelligence...'
                            content: 'Full article content here...'
                            url: 'https://example.com/article/1'
                            url_to_image: 'https://example.com/image.jpg'
                            published_at: '2024-01-15T10:30:00.000000Z'
                            source:
                              id: 1
                              name: NewsAPI
                              slug: newsapi
                            category:
                              id: 1
                              name: Technology
                              slug: technology
                            created_at: '2024-01-15T10:30:00.000000Z'
                            updated_at: '2024-01-15T10:30:00.000000Z'
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            title:
                              type: string
                              example: 'Breaking News: AI Revolution'
                            description:
                              type: string
                              example: 'Latest developments in artificial intelligence...'
                            content:
                              type: string
                              example: 'Full article content here...'
                            url:
                              type: string
                              example: 'https://example.com/article/1'
                            url_to_image:
                              type: string
                              example: 'https://example.com/image.jpg'
                            published_at:
                              type: string
                              example: '2024-01-15T10:30:00.000000Z'
                            source:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  example: 1
                                name:
                                  type: string
                                  example: NewsAPI
                                slug:
                                  type: string
                                  example: newsapi
                            category:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  example: 1
                                name:
                                  type: string
                                  example: Technology
                                slug:
                                  type: string
                                  example: technology
                            created_at:
                              type: string
                              example: '2024-01-15T10:30:00.000000Z'
                            updated_at:
                              type: string
                              example: '2024-01-15T10:30:00.000000Z'
                      first_page_url:
                        type: string
                        example: 'http://localhost:8000/api/articles?page=1'
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 10
                      last_page_url:
                        type: string
                        example: 'http://localhost:8000/api/articles?page=10'
                      links:
                        type: array
                        example: []
                      next_page_url:
                        type: string
                        example: 'http://localhost:8000/api/articles?page=2'
                      prev_page_url:
                        type: string
                        example: null
                      to:
                        type: integer
                        example: 10
                      total:
                        type: integer
                        example: 100
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'Validation error'
                  errors:
                    per_page:
                      - 'The per page must not be greater than 50.'
                    from_date:
                      - 'The from date does not match the format Y-m-d.'
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Validation error'
                  errors:
                    type: object
                    properties:
                      per_page:
                        type: array
                        example:
                          - 'The per page must not be greater than 50.'
                        items:
                          type: string
                      from_date:
                        type: array
                        example:
                          - 'The from date does not match the format Y-m-d.'
                        items:
                          type: string
      tags:
        - Articles
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 88
                  nullable: false
                per_page:
                  type: integer
                  description: 'Must be at least 1. Must not be greater than 50.'
                  example: 24
                  nullable: false
                category:
                  type: string
                  description: 'The <code>slug</code> of an existing record in the categories table.'
                  example: id
                  nullable: false
                source:
                  type: string
                  description: 'The <code>slug</code> of an existing record in the sources table.'
                  example: quam
                  nullable: false
                from_date:
                  type: string
                  description: 'Must be a valid date in the format <code>Y-m-d</code>.'
                  example: '2025-08-22'
                  nullable: false
                to_date:
                  type: string
                  description: 'Must be a valid date in the format <code>Y-m-d</code>. Must be a date after or equal to <code>from_date</code>.'
                  example: '2105-08-17'
                  nullable: false
                keyword:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: xrmsynpv
                  nullable: false
      security: []
  /api/articles/filtered:
    get:
      summary: 'Get filtered articles for search page'
      operationId: getFilteredArticlesForSearchPage
      description: "Retrieve articles with comprehensive filtering options for the search page.\nThis endpoint is designed specifically for search functionality with filters."
      parameters:
        -
          in: query
          name: page
          description: 'Page number for pagination.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page number for pagination.'
            example: 1
            nullable: false
        -
          in: query
          name: per_page
          description: 'Number of articles per page (max 50).'
          example: 10
          required: false
          schema:
            type: integer
            description: 'Number of articles per page (max 50).'
            example: 10
            nullable: false
        -
          in: query
          name: keyword
          description: 'Search keyword in title, description, and content.'
          example: 'artificial intelligence'
          required: false
          schema:
            type: string
            description: 'Search keyword in title, description, and content.'
            example: 'artificial intelligence'
            nullable: false
        -
          in: query
          name: category
          description: 'Filter by category slug.'
          example: technology
          required: false
          schema:
            type: string
            description: 'Filter by category slug.'
            example: technology
            nullable: false
        -
          in: query
          name: source
          description: 'Filter by source slug.'
          example: newsapi
          required: false
          schema:
            type: string
            description: 'Filter by source slug.'
            example: newsapi
            nullable: false
        -
          in: query
          name: from_date
          description: 'Filter articles from this date (Y-m-d format).'
          example: '2024-01-01'
          required: false
          schema:
            type: string
            description: 'Filter articles from this date (Y-m-d format).'
            example: '2024-01-01'
            nullable: false
        -
          in: query
          name: to_date
          description: 'Filter articles to this date (Y-m-d format).'
          example: '2024-01-31'
          required: false
          schema:
            type: string
            description: 'Filter articles to this date (Y-m-d format).'
            example: '2024-01-31'
            nullable: false
        -
          in: query
          name: sort_by
          description: 'Sort order (published_at, title, relevance).'
          example: published_at
          required: false
          schema:
            type: string
            description: 'Sort order (published_at, title, relevance).'
            example: published_at
            nullable: false
        -
          in: query
          name: sort_order
          description: 'Sort direction (asc, desc).'
          example: desc
          required: false
          schema:
            type: string
            description: 'Sort direction (asc, desc).'
            example: desc
            nullable: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  data:
                    current_page: 1
                    data:
                      -
                        id: 1
                        title: 'Breaking News: AI Revolution'
                        description: 'Latest developments in artificial intelligence...'
                        content: 'Full article content here...'
                        url: 'https://example.com/article/1'
                        url_to_image: 'https://example.com/image.jpg'
                        published_at: '2024-01-15T10:30:00.000000Z'
                        source:
                          id: 1
                          name: NewsAPI
                          slug: newsapi
                        category:
                          id: 1
                          name: Technology
                          slug: technology
                        created_at: '2024-01-15T10:30:00.000000Z'
                        updated_at: '2024-01-15T10:30:00.000000Z'
                    first_page_url: 'http://localhost:8000/api/articles/filtered?page=1'
                    from: 1
                    last_page: 10
                    last_page_url: 'http://localhost:8000/api/articles/filtered?page=10'
                    links: []
                    next_page_url: 'http://localhost:8000/api/articles/filtered?page=2'
                    prev_page_url: null
                    to: 10
                    total: 100
                  filters_applied:
                    keyword: 'artificial intelligence'
                    category: technology
                    source: newsapi
                    from_date: '2024-01-01'
                    to_date: '2024-01-31'
                    sort_by: published_at
                    sort_order: desc
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      data:
                        type: array
                        example:
                          -
                            id: 1
                            title: 'Breaking News: AI Revolution'
                            description: 'Latest developments in artificial intelligence...'
                            content: 'Full article content here...'
                            url: 'https://example.com/article/1'
                            url_to_image: 'https://example.com/image.jpg'
                            published_at: '2024-01-15T10:30:00.000000Z'
                            source:
                              id: 1
                              name: NewsAPI
                              slug: newsapi
                            category:
                              id: 1
                              name: Technology
                              slug: technology
                            created_at: '2024-01-15T10:30:00.000000Z'
                            updated_at: '2024-01-15T10:30:00.000000Z'
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            title:
                              type: string
                              example: 'Breaking News: AI Revolution'
                            description:
                              type: string
                              example: 'Latest developments in artificial intelligence...'
                            content:
                              type: string
                              example: 'Full article content here...'
                            url:
                              type: string
                              example: 'https://example.com/article/1'
                            url_to_image:
                              type: string
                              example: 'https://example.com/image.jpg'
                            published_at:
                              type: string
                              example: '2024-01-15T10:30:00.000000Z'
                            source:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  example: 1
                                name:
                                  type: string
                                  example: NewsAPI
                                slug:
                                  type: string
                                  example: newsapi
                            category:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  example: 1
                                name:
                                  type: string
                                  example: Technology
                                slug:
                                  type: string
                                  example: technology
                            created_at:
                              type: string
                              example: '2024-01-15T10:30:00.000000Z'
                            updated_at:
                              type: string
                              example: '2024-01-15T10:30:00.000000Z'
                      first_page_url:
                        type: string
                        example: 'http://localhost:8000/api/articles/filtered?page=1'
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 10
                      last_page_url:
                        type: string
                        example: 'http://localhost:8000/api/articles/filtered?page=10'
                      links:
                        type: array
                        example: []
                      next_page_url:
                        type: string
                        example: 'http://localhost:8000/api/articles/filtered?page=2'
                      prev_page_url:
                        type: string
                        example: null
                      to:
                        type: integer
                        example: 10
                      total:
                        type: integer
                        example: 100
                  filters_applied:
                    type: object
                    properties:
                      keyword:
                        type: string
                        example: 'artificial intelligence'
                      category:
                        type: string
                        example: technology
                      source:
                        type: string
                        example: newsapi
                      from_date:
                        type: string
                        example: '2024-01-01'
                      to_date:
                        type: string
                        example: '2024-01-31'
                      sort_by:
                        type: string
                        example: published_at
                      sort_order:
                        type: string
                        example: desc
      tags:
        - Articles
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 36
                  nullable: false
                per_page:
                  type: integer
                  description: 'Must be at least 1. Must not be greater than 50.'
                  example: 9
                  nullable: false
                keyword:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: akifwlxhhuqz
                  nullable: false
                category:
                  type: string
                  description: 'The <code>slug</code> of an existing record in the categories table.'
                  example: debitis
                  nullable: false
                source:
                  type: string
                  description: 'The <code>slug</code> of an existing record in the sources table.'
                  example: incidunt
                  nullable: false
                from_date:
                  type: string
                  description: 'Must be a valid date in the format <code>Y-m-d</code>.'
                  example: '2025-08-22'
                  nullable: false
                to_date:
                  type: string
                  description: 'Must be a valid date in the format <code>Y-m-d</code>. Must be a date after or equal to <code>from_date</code>.'
                  example: '2099-05-02'
                  nullable: false
                sort_by:
                  type: string
                  description: ''
                  example: relevance
                  nullable: false
                  enum:
                    - published_at
                    - title
                    - relevance
                sort_order:
                  type: string
                  description: ''
                  example: desc
                  nullable: false
                  enum:
                    - asc
                    - desc
      security: []
  /api/articles/initiate-scraping:
    post:
      summary: 'Manually initiate news scraping based on filters'
      operationId: manuallyInitiateNewsScrapingBasedOnFilters
      description: ''
      parameters:
        -
          in: query
          name: keyword
          description: 'Search keyword.'
          example: 'artificial intelligence'
          required: false
          schema:
            type: string
            description: 'Search keyword.'
            example: 'artificial intelligence'
            nullable: false
        -
          in: query
          name: category
          description: 'Filter by category slug.'
          example: technology
          required: false
          schema:
            type: string
            description: 'Filter by category slug.'
            example: technology
            nullable: false
        -
          in: query
          name: source
          description: 'Filter by source slug.'
          example: newsapi
          required: false
          schema:
            type: string
            description: 'Filter by source slug.'
            example: newsapi
            nullable: false
        -
          in: query
          name: from_date
          description: 'Filter articles from this date (Y-m-d format).'
          example: '2024-01-01'
          required: false
          schema:
            type: string
            description: 'Filter articles from this date (Y-m-d format).'
            example: '2024-01-01'
            nullable: false
        -
          in: query
          name: to_date
          description: 'Filter articles to this date (Y-m-d format).'
          example: '2024-01-31'
          required: false
          schema:
            type: string
            description: 'Filter articles to this date (Y-m-d format).'
            example: '2024-01-31'
            nullable: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  message: 'News scraping job has been queued successfully'
                  job_id: job-uuid-here
                  estimated_duration: '2-5 minutes'
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'News scraping job has been queued successfully'
                  job_id:
                    type: string
                    example: job-uuid-here
                  estimated_duration:
                    type: string
                    example: '2-5 minutes'
      tags:
        - Articles
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                keyword:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: jqgmjotkq
                  nullable: false
                category:
                  type: string
                  description: 'The <code>slug</code> of an existing record in the categories table.'
                  example: dolore
                  nullable: false
                source:
                  type: string
                  description: 'The <code>slug</code> of an existing record in the sources table.'
                  example: rerum
                  nullable: false
                from_date:
                  type: string
                  description: 'Must be a valid date in the format <code>Y-m-d</code>.'
                  example: '2025-08-22'
                  nullable: false
                to_date:
                  type: string
                  description: 'Must be a valid date in the format <code>Y-m-d</code>. Must be a date after or equal to <code>from_date</code>.'
                  example: '2107-04-20'
                  nullable: false
      security: []
  /api/articles/search:
    get:
      summary: 'Search articles'
      operationId: searchArticles
      description: "Full-text search across article title, description, and content.\nAutomatically scrapes new articles if needed and merges with existing results."
      parameters:
        -
          in: query
          name: q
          description: 'The search query.'
          example: 'artificial intelligence'
          required: true
          schema:
            type: string
            description: 'The search query.'
            example: 'artificial intelligence'
            nullable: false
        -
          in: query
          name: page
          description: 'Page number for pagination.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page number for pagination.'
            example: 1
            nullable: false
        -
          in: query
          name: per_page
          description: 'Number of articles per page (max 50).'
          example: 10
          required: false
          schema:
            type: integer
            description: 'Number of articles per page (max 50).'
            example: 10
            nullable: false
        -
          in: query
          name: category
          description: 'Filter by category slug.'
          example: technology
          required: false
          schema:
            type: string
            description: 'Filter by category slug.'
            example: technology
            nullable: false
        -
          in: query
          name: source
          description: 'Filter by source slug.'
          example: newsapi
          required: false
          schema:
            type: string
            description: 'Filter by source slug.'
            example: newsapi
            nullable: false
        -
          in: query
          name: from_date
          description: 'Filter articles from this date (Y-m-d format).'
          example: '2024-01-01'
          required: false
          schema:
            type: string
            description: 'Filter articles from this date (Y-m-d format).'
            example: '2024-01-01'
            nullable: false
        -
          in: query
          name: to_date
          description: 'Filter articles to this date (Y-m-d format).'
          example: '2024-01-31'
          required: false
          schema:
            type: string
            description: 'Filter articles to this date (Y-m-d format).'
            example: '2024-01-31'
            nullable: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  data:
                    current_page: 1
                    data:
                      -
                        id: 1
                        title: 'Breaking News: AI Revolution'
                        description: 'Latest developments in artificial intelligence...'
                        content: 'Full article content here...'
                        url: 'https://example.com/article/1'
                        url_to_image: 'https://example.com/image.jpg'
                        published_at: '2024-01-15T10:30:00.000000Z'
                        source:
                          id: 1
                          name: NewsAPI
                          slug: newsapi
                        category:
                          id: 1
                          name: Technology
                          slug: technology
                        created_at: '2024-01-15T10:30:00.000000Z'
                        updated_at: '2024-01-15T10:30:00.000000Z'
                    first_page_url: 'http://localhost:8000/api/articles/search?q=ai&page=1'
                    from: 1
                    last_page: 5
                    last_page_url: 'http://localhost:8000/api/articles/search?q=ai&page=5'
                    links: []
                    next_page_url: 'http://localhost:8000/api/articles?page=2'
                    prev_page_url: null
                    to: 10
                    total: 50
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      data:
                        type: array
                        example:
                          -
                            id: 1
                            title: 'Breaking News: AI Revolution'
                            description: 'Latest developments in artificial intelligence...'
                            content: 'Full article content here...'
                            url: 'https://example.com/article/1'
                            url_to_image: 'https://example.com/image.jpg'
                            published_at: '2024-01-15T10:30:00.000000Z'
                            source:
                              id: 1
                              name: NewsAPI
                              slug: newsapi
                            category:
                              id: 1
                              name: Technology
                              slug: technology
                            created_at: '2024-01-15T10:30:00.000000Z'
                            updated_at: '2024-01-15T10:30:00.000000Z'
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            title:
                              type: string
                              example: 'Breaking News: AI Revolution'
                            description:
                              type: string
                              example: 'Latest developments in artificial intelligence...'
                            content:
                              type: string
                              example: 'Full article content here...'
                            url:
                              type: string
                              example: 'https://example.com/article/1'
                            url_to_image:
                              type: string
                              example: 'https://example.com/image.jpg'
                            published_at:
                              type: string
                              example: '2024-01-15T10:30:00.000000Z'
                            source:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  example: 1
                                name:
                                  type: string
                                  example: NewsAPI
                                slug:
                                  type: string
                                  example: newsapi
                            category:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  example: 1
                                name:
                                  type: string
                                  example: Technology
                                slug:
                                  type: string
                                  example: technology
                            created_at:
                              type: string
                              example: '2024-01-15T10:30:00.000000Z'
                            updated_at:
                              type: string
                              example: '2024-01-15T10:30:00.000000Z'
                      first_page_url:
                        type: string
                        example: 'http://localhost:8000/api/articles/search?q=ai&page=1'
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 5
                      last_page_url:
                        type: string
                        example: 'http://localhost:8000/api/articles/search?q=ai&page=5'
                      links:
                        type: array
                        example: []
                      next_page_url:
                        type: string
                        example: 'http://localhost:8000/api/articles?page=2'
                      prev_page_url:
                        type: string
                        example: null
                      to:
                        type: integer
                        example: 10
                      total:
                        type: integer
                        example: 50
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'Validation error'
                  errors:
                    q:
                      - 'The q field is required.'
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Validation error'
                  errors:
                    type: object
                    properties:
                      q:
                        type: array
                        example:
                          - 'The q field is required.'
                        items:
                          type: string
      tags:
        - Articles
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: 'Must be at least 1 character. Must not be greater than 255 characters.'
                  example: wxi
                  nullable: false
                page:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 15
                  nullable: false
                per_page:
                  type: integer
                  description: 'Must be at least 1. Must not be greater than 50.'
                  example: 11
                  nullable: false
                category:
                  type: string
                  description: 'The <code>slug</code> of an existing record in the categories table.'
                  example: et
                  nullable: false
                source:
                  type: string
                  description: 'The <code>slug</code> of an existing record in the sources table.'
                  example: totam
                  nullable: false
                from_date:
                  type: string
                  description: 'Must be a valid date in the format <code>Y-m-d</code>.'
                  example: '2025-08-22'
                  nullable: false
                to_date:
                  type: string
                  description: 'Must be a valid date in the format <code>Y-m-d</code>. Must be a date after or equal to <code>from_date</code>.'
                  example: '2042-12-29'
                  nullable: false
              required:
                - q
      security: []
  '/api/articles/{id}':
    get:
      summary: 'Get article details'
      operationId: getArticleDetails
      description: 'Retrieve a specific article by its ID.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  data:
                    article:
                      id: 550e8400-e29b-41d4-a716-446655440000
                      title: 'Breaking News: AI Revolution'
                      description: 'Latest developments in artificial intelligence...'
                      content: 'Full article content here...'
                      url: 'https://example.com/article/1'
                      url_to_image: 'https://example.com/image.jpg'
                      published_at: '2024-01-15T10:30:00.000000Z'
                      source:
                        id: 550e8400-e29b-41d4-a716-446655440001
                        name: NewsAPI
                        slug: newsapi
                      category:
                        id: 550e8400-e29b-41d4-a716-446655440002
                        name: Technology
                        slug: technology
                      created_at: '2024-01-15T10:30:00.000000Z'
                      updated_at: '2024-01-15T10:30:00.000000Z'
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      article:
                        type: object
                        properties:
                          id:
                            type: string
                            example: 550e8400-e29b-41d4-a716-446655440000
                          title:
                            type: string
                            example: 'Breaking News: AI Revolution'
                          description:
                            type: string
                            example: 'Latest developments in artificial intelligence...'
                          content:
                            type: string
                            example: 'Full article content here...'
                          url:
                            type: string
                            example: 'https://example.com/article/1'
                          url_to_image:
                            type: string
                            example: 'https://example.com/image.jpg'
                          published_at:
                            type: string
                            example: '2024-01-15T10:30:00.000000Z'
                          source:
                            type: object
                            properties:
                              id:
                                type: string
                                example: 550e8400-e29b-41d4-a716-446655440001
                              name:
                                type: string
                                example: NewsAPI
                              slug:
                                type: string
                                example: newsapi
                          category:
                            type: object
                            properties:
                              id:
                                type: string
                                example: 550e8400-e29b-41d4-a716-446655440002
                              name:
                                type: string
                                example: Technology
                              slug:
                                type: string
                                example: technology
                          created_at:
                            type: string
                            example: '2024-01-15T10:30:00.000000Z'
                          updated_at:
                            type: string
                            example: '2024-01-15T10:30:00.000000Z'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'Article not found'
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Article not found'
      tags:
        - Articles
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The article UUID.'
        example: 550e8400-e29b-41d4-a716-446655440000
        required: true
        schema:
          type: string
  /api/register:
    post:
      summary: 'Register a new user'
      operationId: registerANewUser
      description: 'Create a new user account with email and password.'
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  message: 'User registered successfully'
                  data:
                    user:
                      id: 1
                      name: 'John Doe'
                      email: john@example.com
                      email_verified_at: null
                      created_at: '2024-01-15T10:30:00.000000Z'
                      updated_at: '2024-01-15T10:30:00.000000Z'
                    token: 1|abcdef123456789...
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'User registered successfully'
                  data:
                    type: object
                    properties:
                      user:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          name:
                            type: string
                            example: 'John Doe'
                          email:
                            type: string
                            example: john@example.com
                          email_verified_at:
                            type: string
                            example: null
                          created_at:
                            type: string
                            example: '2024-01-15T10:30:00.000000Z'
                          updated_at:
                            type: string
                            example: '2024-01-15T10:30:00.000000Z'
                      token:
                        type: string
                        example: 1|abcdef123456789...
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'Validation error'
                  errors:
                    email:
                      - 'The email has already been taken.'
                    password:
                      - 'The password must be at least 8 characters.'
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Validation error'
                  errors:
                    type: object
                    properties:
                      email:
                        type: array
                        example:
                          - 'The email has already been taken.'
                        items:
                          type: string
                      password:
                        type: array
                        example:
                          - 'The password must be at least 8 characters.'
                        items:
                          type: string
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: "The user's full name."
                  example: 'John Doe'
                  nullable: false
                email:
                  type: string
                  description: "The user's email address."
                  example: john@example.com
                  nullable: false
                password:
                  type: string
                  description: "The user's password (minimum 8 characters)."
                  example: password123
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'Password confirmation.'
                  example: password123
                  nullable: false
              required:
                - name
                - email
                - password
                - password_confirmation
      security: []
  /api/login:
    post:
      summary: 'User login'
      operationId: userLogin
      description: 'Authenticate a user with email and password.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  message: 'Login successful'
                  data:
                    user:
                      id: 1
                      name: 'John Doe'
                      email: john@example.com
                      email_verified_at: null
                      created_at: '2024-01-15T10:30:00.000000Z'
                      updated_at: '2024-01-15T10:30:00.000000Z'
                    token: 2|xyz789123456...
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Login successful'
                  data:
                    type: object
                    properties:
                      user:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          name:
                            type: string
                            example: 'John Doe'
                          email:
                            type: string
                            example: john@example.com
                          email_verified_at:
                            type: string
                            example: null
                          created_at:
                            type: string
                            example: '2024-01-15T10:30:00.000000Z'
                          updated_at:
                            type: string
                            example: '2024-01-15T10:30:00.000000Z'
                      token:
                        type: string
                        example: 2|xyz789123456...
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'Invalid credentials'
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Invalid credentials'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'Validation error'
                  errors:
                    email:
                      - 'The email field is required.'
                    password:
                      - 'The password field is required.'
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Validation error'
                  errors:
                    type: object
                    properties:
                      email:
                        type: array
                        example:
                          - 'The email field is required.'
                        items:
                          type: string
                      password:
                        type: array
                        example:
                          - 'The password field is required.'
                        items:
                          type: string
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: "The user's email address."
                  example: john@example.com
                  nullable: false
                password:
                  type: string
                  description: "The user's password."
                  example: password123
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/user:
    get:
      summary: 'Get authenticated user'
      operationId: getAuthenticatedUser
      description: "Retrieve the current authenticated user's information."
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  data:
                    user:
                      id: 1
                      name: 'John Doe'
                      email: john@example.com
                      email_verified_at: null
                      created_at: '2024-01-15T10:30:00.000000Z'
                      updated_at: '2024-01-15T10:30:00.000000Z'
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      user:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          name:
                            type: string
                            example: 'John Doe'
                          email:
                            type: string
                            example: john@example.com
                          email_verified_at:
                            type: string
                            example: null
                          created_at:
                            type: string
                            example: '2024-01-15T10:30:00.000000Z'
                          updated_at:
                            type: string
                            example: '2024-01-15T10:30:00.000000Z'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Authentication
  /api/logout:
    post:
      summary: 'User logout'
      operationId: userLogout
      description: 'Revoke the current authentication token.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  message: 'Logout successful'
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Logout successful'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Authentication
  /api/categories:
    get:
      summary: 'List all categories'
      operationId: listAllCategories
      description: 'Retrieve all available article categories.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  data:
                    categories:
                      -
                        id: 550e8400-e29b-41d4-a716-446655440001
                        name: Technology
                        slug: technology
                        description: 'Latest technology news and updates'
                        created_at: '2024-01-15T10:30:00.000000Z'
                        updated_at: '2024-01-15T10:30:00.000000Z'
                      -
                        id: 550e8400-e29b-41d4-a716-446655440002
                        name: Business
                        slug: business
                        description: 'Business and finance news'
                        created_at: '2024-01-15T10:30:00.000000Z'
                        updated_at: '2024-01-15T10:30:00.000000Z'
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      categories:
                        type: array
                        example:
                          -
                            id: 550e8400-e29b-41d4-a716-446655440001
                            name: Technology
                            slug: technology
                            description: 'Latest technology news and updates'
                            created_at: '2024-01-15T10:30:00.000000Z'
                            updated_at: '2024-01-15T10:30:00.000000Z'
                          -
                            id: 550e8400-e29b-41d4-a716-446655440002
                            name: Business
                            slug: business
                            description: 'Business and finance news'
                            created_at: '2024-01-15T10:30:00.000000Z'
                            updated_at: '2024-01-15T10:30:00.000000Z'
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              example: 550e8400-e29b-41d4-a716-446655440001
                            name:
                              type: string
                              example: Technology
                            slug:
                              type: string
                              example: technology
                            description:
                              type: string
                              example: 'Latest technology news and updates'
                            created_at:
                              type: string
                              example: '2024-01-15T10:30:00.000000Z'
                            updated_at:
                              type: string
                              example: '2024-01-15T10:30:00.000000Z'
      tags:
        - Categories
      security: []
  /api/queue/jobs:
    get:
      summary: 'Get all queue jobs with their status'
      operationId: getAllQueueJobsWithTheirStatus
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  data:
                    -
                      id: job-uuid-here
                      type: filtered_search
                      status: queued
                      filters:
                        keyword: 'artificial intelligence'
                        category: technology
                      created_at: '2024-01-15T10:30:00.000000Z'
                      started_at: null
                      completed_at: null
                      failed_at: null
                      error_message: null
                      progress: 0
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    example:
                      -
                        id: job-uuid-here
                        type: filtered_search
                        status: queued
                        filters:
                          keyword: 'artificial intelligence'
                          category: technology
                        created_at: '2024-01-15T10:30:00.000000Z'
                        started_at: null
                        completed_at: null
                        failed_at: null
                        error_message: null
                        progress: 0
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: job-uuid-here
                        type:
                          type: string
                          example: filtered_search
                        status:
                          type: string
                          example: queued
                        filters:
                          type: object
                          properties:
                            keyword:
                              type: string
                              example: 'artificial intelligence'
                            category:
                              type: string
                              example: technology
                        created_at:
                          type: string
                          example: '2024-01-15T10:30:00.000000Z'
                        started_at:
                          type: string
                          example: null
                        completed_at:
                          type: string
                          example: null
                        failed_at:
                          type: string
                          example: null
                        error_message:
                          type: string
                          example: null
                        progress:
                          type: integer
                          example: 0
      tags:
        - Endpoints
      security: []
  '/api/queue/jobs/{jobId}':
    get:
      summary: 'Get specific job status'
      operationId: getSpecificJobStatus
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  data:
                    id: job-uuid-here
                    type: filtered_search
                    status: in_progress
                    filters:
                      keyword: 'artificial intelligence'
                    created_at: '2024-01-15T10:30:00.000000Z'
                    started_at: '2024-01-15T10:31:00.000000Z'
                    completed_at: null
                    failed_at: null
                    error_message: null
                    progress: 45
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: job-uuid-here
                      type:
                        type: string
                        example: filtered_search
                      status:
                        type: string
                        example: in_progress
                      filters:
                        type: object
                        properties:
                          keyword:
                            type: string
                            example: 'artificial intelligence'
                      created_at:
                        type: string
                        example: '2024-01-15T10:30:00.000000Z'
                      started_at:
                        type: string
                        example: '2024-01-15T10:31:00.000000Z'
                      completed_at:
                        type: string
                        example: null
                      failed_at:
                        type: string
                        example: null
                      error_message:
                        type: string
                        example: null
                      progress:
                        type: integer
                        example: 45
      tags:
        - Endpoints
      security: []
    delete:
      summary: 'Cancel a queued job'
      operationId: cancelAQueuedJob
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  message: 'Job cancelled successfully'
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Job cancelled successfully'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: jobId
        description: ''
        example: harum
        required: true
        schema:
          type: string
  /api/queue/sync-status:
    post:
      summary: "Sync queue status with Laravel's queue system"
      operationId: syncQueueStatusWithLaravelsQueueSystem
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  message: 'Queue status synced successfully'
                  job_counts:
                    queued: 5
                    failed: 2
                    completed: 10
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Queue status synced successfully'
                  job_counts:
                    type: object
                    properties:
                      queued:
                        type: integer
                        example: 5
                      failed:
                        type: integer
                        example: 2
                      completed:
                        type: integer
                        example: 10
      tags:
        - Endpoints
      security: []
  '/api/queue/jobs/{jobId}/retry':
    post:
      summary: 'Retry a failed job'
      operationId: retryAFailedJob
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  message: 'Job queued for retry successfully'
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Job queued for retry successfully'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: jobId
        description: ''
        example: voluptas
        required: true
        schema:
          type: string
  /api/sources:
    get:
      summary: 'List all sources'
      operationId: listAllSources
      description: 'Retrieve all available news sources.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  data:
                    sources:
                      -
                        id: 550e8400-e29b-41d4-a716-446655440001
                        name: NewsAPI
                        slug: newsapi
                        description: 'NewsAPI.org news aggregator'
                        url: 'https://newsapi.org'
                        created_at: '2024-01-15T10:30:00.000000Z'
                        updated_at: '2024-01-15T10:30:00.000000Z'
                      -
                        id: 550e8400-e29b-41d4-a716-446655440002
                        name: NewsData.io
                        slug: newsdata
                        description: 'NewsData.io API service'
                        url: 'https://newsdata.io'
                        created_at: '2024-01-15T10:30:00.000000Z'
                        updated_at: '2024-01-15T10:30:00.000000Z'
                      -
                        id: 550e8400-e29b-41d4-a716-446655440003
                        name: 'The New York Times'
                        slug: nyt
                        description: 'The New York Times API'
                        url: 'https://developer.nytimes.com'
                        created_at: '2024-01-15T10:30:00.000000Z'
                        updated_at: '2024-01-15T10:30:00.000000Z'
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      sources:
                        type: array
                        example:
                          -
                            id: 550e8400-e29b-41d4-a716-446655440001
                            name: NewsAPI
                            slug: newsapi
                            description: 'NewsAPI.org news aggregator'
                            url: 'https://newsapi.org'
                            created_at: '2024-01-15T10:30:00.000000Z'
                            updated_at: '2024-01-15T10:30:00.000000Z'
                          -
                            id: 550e8400-e29b-41d4-a716-446655440002
                            name: NewsData.io
                            slug: newsdata
                            description: 'NewsData.io API service'
                            url: 'https://newsdata.io'
                            created_at: '2024-01-15T10:30:00.000000Z'
                            updated_at: '2024-01-15T10:30:00.000000Z'
                          -
                            id: 550e8400-e29b-41d4-a716-446655440003
                            name: 'The New York Times'
                            slug: nyt
                            description: 'The New York Times API'
                            url: 'https://developer.nytimes.com'
                            created_at: '2024-01-15T10:30:00.000000Z'
                            updated_at: '2024-01-15T10:30:00.000000Z'
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              example: 550e8400-e29b-41d4-a716-446655440001
                            name:
                              type: string
                              example: NewsAPI
                            slug:
                              type: string
                              example: newsapi
                            description:
                              type: string
                              example: 'NewsAPI.org news aggregator'
                            url:
                              type: string
                              example: 'https://newsapi.org'
                            created_at:
                              type: string
                              example: '2024-01-15T10:30:00.000000Z'
                            updated_at:
                              type: string
                              example: '2024-01-15T10:30:00.000000Z'
      tags:
        - Sources
      security: []
  /api/preferences:
    get:
      summary: 'Get user preferences'
      operationId: getUserPreferences
      description: "Retrieve the current user's preferences for categories, sources, and authors."
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      success: true
                      data:
                        preferences:
                          id: 1
                          user_id: 1
                          preferred_categories:
                            - technology
                            - business
                          preferred_sources:
                            - newsapi
                            - nyt
                          preferred_authors:
                            - 'John Smith'
                            - 'Jane Doe'
                          created_at: '2024-01-15T10:30:00.000000Z'
                          updated_at: '2024-01-15T10:30:00.000000Z'
                    properties:
                      success:
                        type: boolean
                        example: true
                      data:
                        type: object
                        properties:
                          preferences:
                            type: object
                            properties:
                              id:
                                type: integer
                                example: 1
                              user_id:
                                type: integer
                                example: 1
                              preferred_categories:
                                type: array
                                example:
                                  - technology
                                  - business
                                items:
                                  type: string
                              preferred_sources:
                                type: array
                                example:
                                  - newsapi
                                  - nyt
                                items:
                                  type: string
                              preferred_authors:
                                type: array
                                example:
                                  - 'John Smith'
                                  - 'Jane Doe'
                                items:
                                  type: string
                              created_at:
                                type: string
                                example: '2024-01-15T10:30:00.000000Z'
                              updated_at:
                                type: string
                                example: '2024-01-15T10:30:00.000000Z'
                  -
                    description: ''
                    type: object
                    example:
                      success: true
                      data:
                        preferences:
                          user_id: 1
                          preferred_categories: []
                          preferred_sources: []
                          preferred_authors: []
                          email_notifications: false
                          timezone: UTC
                      message: 'No preferences found. Please set your preferences first.'
                    properties:
                      success:
                        type: boolean
                        example: true
                      data:
                        type: object
                        properties:
                          preferences:
                            type: object
                            properties:
                              user_id:
                                type: integer
                                example: 1
                              preferred_categories:
                                type: array
                                example: []
                              preferred_sources:
                                type: array
                                example: []
                              preferred_authors:
                                type: array
                                example: []
                              email_notifications:
                                type: boolean
                                example: false
                              timezone:
                                type: string
                                example: UTC
                      message:
                        type: string
                        example: 'No preferences found. Please set your preferences first.'
      tags:
        - 'User Preferences'
    post:
      summary: 'Update user preferences'
      operationId: updateUserPreferences
      description: "Create or update the current user's preferences for personalized content."
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  message: 'Preferences updated successfully'
                  data:
                    preferences:
                      id: 1
                      user_id: 1
                      preferred_categories:
                        - technology
                        - business
                      preferred_sources:
                        - newsapi
                        - nyt
                      preferred_authors:
                        - 'John Smith'
                        - 'Jane Doe'
                      created_at: '2024-01-15T10:30:00.000000Z'
                      updated_at: '2024-01-15T10:31:00.000000Z'
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Preferences updated successfully'
                  data:
                    type: object
                    properties:
                      preferences:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          user_id:
                            type: integer
                            example: 1
                          preferred_categories:
                            type: array
                            example:
                              - technology
                              - business
                            items:
                              type: string
                          preferred_sources:
                            type: array
                            example:
                              - newsapi
                              - nyt
                            items:
                              type: string
                          preferred_authors:
                            type: array
                            example:
                              - 'John Smith'
                              - 'Jane Doe'
                            items:
                              type: string
                          created_at:
                            type: string
                            example: '2024-01-15T10:30:00.000000Z'
                          updated_at:
                            type: string
                            example: '2024-01-15T10:31:00.000000Z'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'Validation error'
                  errors:
                    preferred_categories:
                      - 'The preferred categories must be an array.'
                    preferred_categories.0:
                      - 'The selected preferred categories.0 is invalid.'
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Validation error'
                  errors:
                    type: object
                    properties:
                      preferred_categories:
                        type: array
                        example:
                          - 'The preferred categories must be an array.'
                        items:
                          type: string
                      preferred_categories.0:
                        type: array
                        example:
                          - 'The selected preferred categories.0 is invalid.'
                        items:
                          type: string
      tags:
        - 'User Preferences'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                preferred_categories:
                  type: array
                  description: 'Array of category slugs.'
                  example:
                    - technology
                    - business
                  items:
                    type: string
                preferred_sources:
                  type: array
                  description: 'Array of source slugs.'
                  example:
                    - newsapi
                    - nyt
                  items:
                    type: string
                preferred_authors:
                  type: array
                  description: 'Array of author names.'
                  example:
                    - 'John Smith'
                    - 'Jane Doe'
                  items:
                    type: string
                email_notifications:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                timezone:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: Pacific/Saipan
                  nullable: true
  /api/personalized-feed:
    get:
      summary: 'Get personalized news feed for home page'
      operationId: getPersonalizedNewsFeedForHomePage
      description: "Retrieve a personalized news feed based on user preferences for the home page.\nThis endpoint is designed specifically for home page personalization.\nIf no articles exist, automatically scrapes news based on preferences."
      parameters:
        -
          in: query
          name: page
          description: 'Page number for pagination.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page number for pagination.'
            example: 1
            nullable: false
        -
          in: query
          name: per_page
          description: 'Number of articles per page (max 50).'
          example: 10
          required: false
          schema:
            type: integer
            description: 'Number of articles per page (max 50).'
            example: 10
            nullable: false
        -
          in: query
          name: from_date
          description: 'Filter articles from this date (Y-m-d format).'
          example: '2024-01-01'
          required: false
          schema:
            type: string
            description: 'Filter articles from this date (Y-m-d format).'
            example: '2024-01-01'
            nullable: false
        -
          in: query
          name: to_date
          description: 'Filter articles to this date (Y-m-d format).'
          example: '2024-01-31'
          required: false
          schema:
            type: string
            description: 'Filter articles to this date (Y-m-d format).'
            example: '2024-01-31'
            nullable: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  data:
                    current_page: 1
                    data:
                      -
                        id: 1
                        title: 'Breaking News: AI Revolution'
                        description: 'Latest developments in artificial intelligence...'
                        content: 'Full article content here...'
                        url: 'https://example.com/article/1'
                        url_to_image: 'https://example.com/image.jpg'
                        published_at: '2024-01-15T10:30:00.000000Z'
                        source:
                          id: 1
                          name: NewsAPI
                          slug: newsapi
                        category:
                          id: 1
                          name: Technology
                          slug: technology
                        created_at: '2024-01-15T10:30:00.000000Z'
                        updated_at: '2024-01-15T10:30:00.000000Z'
                    first_page_url: 'http://localhost:8000/api/personalized-feed?page=1'
                    from: 1
                    last_page: 10
                    last_page_url: 'http://localhost:8000/api/personalized-feed?page=10'
                    links: []
                    next_page_url: 'http://localhost:8000/api/personalized-feed?page=2'
                    prev_page_url: null
                    to: 10
                    total: 100
                  preferences_applied:
                    categories:
                      - technology
                      - science
                    sources:
                      - newsapi
                      - nyt
                    authors:
                      - 'John Doe'
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      data:
                        type: array
                        example:
                          -
                            id: 1
                            title: 'Breaking News: AI Revolution'
                            description: 'Latest developments in artificial intelligence...'
                            content: 'Full article content here...'
                            url: 'https://example.com/article/1'
                            url_to_image: 'https://example.com/image.jpg'
                            published_at: '2024-01-15T10:30:00.000000Z'
                            source:
                              id: 1
                              name: NewsAPI
                              slug: newsapi
                            category:
                              id: 1
                              name: Technology
                              slug: technology
                            created_at: '2024-01-15T10:30:00.000000Z'
                            updated_at: '2024-01-15T10:30:00.000000Z'
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            title:
                              type: string
                              example: 'Breaking News: AI Revolution'
                            description:
                              type: string
                              example: 'Latest developments in artificial intelligence...'
                            content:
                              type: string
                              example: 'Full article content here...'
                            url:
                              type: string
                              example: 'https://example.com/article/1'
                            url_to_image:
                              type: string
                              example: 'https://example.com/image.jpg'
                            published_at:
                              type: string
                              example: '2024-01-15T10:30:00.000000Z'
                            source:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  example: 1
                                name:
                                  type: string
                                  example: NewsAPI
                                slug:
                                  type: string
                                  example: newsapi
                            category:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  example: 1
                                name:
                                  type: string
                                  example: Technology
                                slug:
                                  type: string
                                  example: technology
                            created_at:
                              type: string
                              example: '2024-01-15T10:30:00.000000Z'
                            updated_at:
                              type: string
                              example: '2024-01-15T10:30:00.000000Z'
                      first_page_url:
                        type: string
                        example: 'http://localhost:8000/api/personalized-feed?page=1'
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 10
                      last_page_url:
                        type: string
                        example: 'http://localhost:8000/api/personalized-feed?page=10'
                      links:
                        type: array
                        example: []
                      next_page_url:
                        type: string
                        example: 'http://localhost:8000/api/personalized-feed?page=2'
                      prev_page_url:
                        type: string
                        example: null
                      to:
                        type: integer
                        example: 10
                      total:
                        type: integer
                        example: 100
                  preferences_applied:
                    type: object
                    properties:
                      categories:
                        type: array
                        example:
                          - technology
                          - science
                        items:
                          type: string
                      sources:
                        type: array
                        example:
                          - newsapi
                          - nyt
                        items:
                          type: string
                      authors:
                        type: array
                        example:
                          - 'John Doe'
                        items:
                          type: string
      tags:
        - 'User Preferences'
